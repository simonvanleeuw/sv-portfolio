{"version":3,"sources":["components/img/linkedin.svg","components/img/menu.svg","components/img/x.svg","components/Footer.js","components/Hero.js","components/TextBlock.js","components/Notification.js","data/Data.js","pages/HomePage.js","pages/Workpage.js","components/Header.js","pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","href","target","src","LinkedIn","Hero","props","heroContent","title","subTitle","text","TextBlock","textItems","map","textItem","index","key","Notification","MenuItemObj","value","id","path","this","menuItems","HeroObj","heroHome","heroWork","heroAbout","TextBlockObj","textBlockHome","textBlockAbout","textBlockWork","HomePage","Component","WorkPage","Header","state","visible","toggleMenu","console","log","setState","prevState","isVisible","to","onClick","X","Menu","menuItem","AboutPage","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d21a7a35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin.3daeafae.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.33734e6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.74bddf1a.svg\";","import React from 'react'\nimport { LinkedIn } from './img/linkedin.svg'\n\nconst Footer = () => {\n        return(\n        <footer>\n            <div>\n                <h3>Simon Vanleeuw</h3>\n                <p>Raafstraat 08, 2018 Antwerpen</p>\n                <p>Belgium</p>\n            </div>\n            <div>\n                <h3>Contact</h3>\n                <a className='link' href=\"tel:0474783041\"><p>+32 474 783 041</p></a>\n                <a className='link' href=\"mailto:simon-vanleeuw@hotmail.com\"><p>simon-vanleeuw@hotmail.com</p></a>\n                <a className=\"icon-button\" href=\"https://www.linkedin.com/in/simon-vanleeuw-08033245/\" target=\"_blank\">\n                    <img src={LinkedIn} />\n                </a>\n            </div>\n            <span><p>© 2020 — Simon Vanleeuw</p></span>\n        </footer>\n    )\n        };\n\nexport default Footer;","import React from 'react';\n\nconst Hero = (props) => {\n    const heroContent = props.heroContent;\n\n    return (\n        <header>\n            <h2>{heroContent.title}</h2>\n            <h3>{heroContent.subTitle}</h3>\n            <p>{heroContent.text}</p>\n            <button className=\"secondary\">View Projects</button>\n        </header>\n    );\n}\n\nexport default Hero;","import React from 'react';\n\nconst TextBlock = (props) => {\n    return(\n    <section>\n        <h2>{props.title}</h2>\n        {props.textItems.map((textItem, index) => {\n            return(\n                <div key={index}>\n                    <h3>{textItem.title}</h3>\n                    <p>{textItem.text}</p>\n                </div>\n            )\n        })}\n    </section>\n    )\n}\n\nexport default TextBlock;","import React from 'react';\n\nconst Notification = () => {\n    const warningMessage = \"The website is currently under re-construction. All portfolio cases will be available again soon.\";\n    const confirm = 'Ok';\n\n    return(\n        <div className=\"notification\">\n            <p>{warningMessage}</p>\n            <button className=\"link\">{confirm}</button>\n        </div>\n    )\n}\n\nexport default Notification;","/*-- Menu Data --*/\n\nclass MenuItemObj {\n    constructor(value, id, path) {\n        this.value = value;\n        this.id = id;\n        this.path = path;\n    }\n}\n\nexport const menuItems = [\n    new MenuItemObj('Work', '1', '/work'), \n    new MenuItemObj('About', '2', '/about'), \n    new MenuItemObj('Contact', '3', '/contact')\n]\n\n/*-- Hero Data --*/\n\nclass HeroObj {\n    constructor(title, subTitle, text) {\n        this.title = title;\n        this.subTitle = subTitle;\n        this.text = text;\n    }\n}\n\nexport const heroHome = new HeroObj('People-empowering products, for better B2B.', 'enterprise UX Designer', 'Having worked for many clients and many diverse projects, Simon has the work-ethic and the experience to overcome many difficulties so his product’s users don’t have to.');\n\nexport const heroWork = [];\n\nexport const heroAbout = new HeroObj('Formless, yet informed.', 'About me', 'In a world that changes faster than the wind, I believe there’s more demand for people who don’t get stuck in fixed patterns. People who keep up with circumstances, changing needs and changing markets. People who, as Bruce Lee called it, stay ‘formless like water’. And I am formless enough to be innovative, while still carrying the necessary information to deliver this innovation in a familiar format of tried-and-true best practices. Finding the new starts always with a familiar, yet constantly evolving process. So what does that process (currently) look like?')\n\n/*-- Text Block Data --*/\n\nclass TextBlockObj {\n    constructor(title, text) {\n        this.title = title;\n        this.text = text;\n    }\n  }\n\n  export const textBlockHome = [\n    new TextBlockObj('UX Design', 'With his core expertise, Simon will translate your targets into a workable product prototype. One that can easily demonstrate the merit to shareholders and technical teams.'),\n    new TextBlockObj('UI Design', 'A product is only complete when it doesn’t just work professionally and credible, but also looks that way. By adding stylistic touches, we create the right look- and feel for the experience, while keeping it consistent with the product brand.'),\n    new TextBlockObj('UX Strategy', 'Besides delivering screens, Simon is well capable of doing, and communicating, the high level work. This ensures that less revisions are made in the prototype and code, making the process really cost-effective.')\n  ]\n\n  export const textBlockAbout = [\n    new TextBlockObj('1. Asking (the right) questions', 'Before starting any work, I try to gain an as accurate view of the situation and our users, by as many channels as possible, by combining User Research methods along with learning the context of the business. '),\n    new TextBlockObj('2. Creating the project outlines', 'Once the situation is known, we can create a definition of success for our product. What are the metrics of success for each? What are the problems and frustrations that must be solved, in what order? That’s how we create the endpoint towards which we must work.'),\n    new TextBlockObj('3. Creating a tangible solution', 'We ask ourselves, will this idea satisfy both the users and the business, while still being technologically feasable? We can only find this out with a tangible prototype.' + \n                    'Depending on the nature of the solution, we can start with click-through-based prototypes or more advanced interactive prototypes. Once the experience feels right, we can amplify it with a relevant look and feel for the product and the brand.')\n  ]\n\n  export const textBlockWork = [\n      \n  ]","import React, { Component } from 'react';\nimport Footer from '../components/Footer'\nimport Hero from '../components/Hero'\nimport TextBlock from '../components/TextBlock'\nimport Notification from '../components/Notification'\nimport { heroHome, textBlockHome } from '../data/Data'\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"grid\">\n                    <Hero heroContent={heroHome} />\n                    <TextBlock title='Services' textItems={textBlockHome}/>\n                </div>\n                <Footer />\n                <Notification/>\n            </div>\n        )\n    }\n}\n\nexport default HomePage;","import React, {Component} from 'react';\nimport Footer from '../components/Footer'\nimport Hero from '../components/Hero'\nimport TextBlock from '../components/TextBlock'\nimport Notification from '../components/Notification'\nimport { heroWork, textBlockWork } from '../data/Data';\n\nclass WorkPage extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"grid\">\n                    <Hero heroContent={heroWork} />\n                    <TextBlock title='Services' textItems={textBlockWork}/>\n                </div>\n                <Footer />\n                <Notification/>\n            </div>\n        )\n    }\n}\n\nexport default WorkPage;","import React, {Component} from 'react';\nimport Menu from './img/menu.svg';\nimport X from './img/x.svg';\nimport { NavLink } from 'react-router-dom';\nimport { menuItems } from '../data/Data';\n\nclass Header extends Component {\n\n    state = {\n        visible: false,\n        menuItems: menuItems,\n    }\n\n    toggleMenu = () => {\n        console.log('onclick triggered');\n        this.setState( prevState => ({ \n            visible: !prevState.visible,\n        }))\n    }\n\n    render() {\n\n        const isVisible = this.state.visible;\n        return (\n            <nav className={isVisible ? \"collapsed\" : \"expanded\"}>\n                <div className=\"menu-container\">\n                    <h1><NavLink to=\"/\">Simon Vanleeuw</NavLink></h1>\n                    <div id=\"menu-button\" onClick={this.toggleMenu}><img src={isVisible ? X : Menu}/></div>\n                </div>\n                    <div id=\"menu\" className={isVisible ? \"visible\" : \"hidden\"}>\n                        <ul>\n                            {this.state.menuItems.map(menuItem => {\n                                return (\n                                    <li key={menuItem.id}><NavLink to={menuItem.path}>{menuItem.value}</NavLink></li>\n                                    )\n                            })}\n                        </ul>\n                        <button className=\"primary\">Get in touch</button>\n                    </div>\n            </nav>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport Footer from '../components/Footer'\nimport Hero from '../components/Hero'\nimport TextBlock from '../components/TextBlock'\nimport Notification from '../components/Notification'\nimport { heroAbout, textBlockAbout } from '../data/Data'\n\nclass AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"grid\">\n                    <Hero heroContent={heroAbout} />\n                    <TextBlock title='Process' textItems={textBlockAbout}/>\n                </div>\n                <Footer />\n                <Notification/>\n            </div>\n        )\n    }\n}\n\nexport default AboutPage;","import React from 'react';\nimport HomePage from './pages/HomePage';\nimport WorkPage from './pages/Workpage';\nimport Header from './components/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport AboutPage from './pages/AboutPage';\n\nfunction App() {\n  return (\n    <main>\n        <BrowserRouter>\n        <Header/>\n          <Switch>\n              <Route exact path=\"/\" component={HomePage}/>\n              <Route path=\"/work\" component={WorkPage}/>\n              <Route path=\"/about\" component={AboutPage}/>\n              <Route component={HomePage}/>\n            </Switch>\n        </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}